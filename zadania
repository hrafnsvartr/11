def mean(*args):
    
    print(len(args))
    x=sum(args)
    y=x/len(args)
    return(y)
             
print(mean(2,2,4,4,))
##################
liczy średnią pozycji, z dowolną ilością pozycji
#################
def check_dictionary_content(d, **args):
    for k in args:
        if k in d:
            print('kjhg')
        
#     args = {}
#     for k in args:
#         args.keys() & d.keys()

    
d = {'orange':3, 'apple':1, 'dogs':10}
print(check_dictionary_content(d, orange=2))
####################################
sprawdza czy w zadanym słowniu występują podane argumenty  w ilości minimum podanej
to be resolved
##############################
def alphabet_position(w):
#     w='The sunset sets at twelve oclock'
#     y = w.split('')
#     for s in y:
#         x=ord(s)
#     print(x)
    l = []
    for i in w:
        l.append(i)
    #return(l)
    l.sort()
    
    print(l)

print(alphabet_position('The sunset sets at twelve oclock'))
##################
podaj numery liter w zdaniu wg alfabetu
loweruj, usun spacje 


#####################
def func(x):
#     x = int
    l=[]
    l2=[]
    y = str(x)
    #print(y)
    for i in y:
        l.append(i)
    print(l)
    l2.append(l.pop())
    while len(l) > 0:
        z=(l.pop())
     #  print(z)
        for i in range(len(l2)):
            if ord(z) >= ord(l2[i]):
                l2.insert(i, z)
                break
        else:
            l2.append(z)
        print(l2)
    else:
        pass
########################
przyjmuje integer i zwraca największą licbę jaką można ułozyć ze składowych
#########################
def consonant_index(x):
    vowels=['a','e','i','o','u','y']
    indeks = []
    x=x.lower()
    for i in range(len(x)):
        if x[i] in vowels:
            indeks.append((i))
    return(indeks)
    
    
print(consonant_index('Azabagorath'))

#################
#przyjmuje string i zwraca indeksy samogłosek, liczone od zera
 ########################
 func porównuje dwa stringi względem rankingu: sumy kodów ASCII danych znaków
 znaki można traktować jako upper lub lowercase
 Nie interesują nas znaki inne niż litery, sa one pomijane przy liczeniu rankingu


